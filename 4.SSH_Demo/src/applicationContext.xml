<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/aop 
							http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/tx 
							http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">


	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>


	<!-- 配置核心事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置通知 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager" > 
		<tx:attributes> <tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" 
		read-only="false" /> <tx:method name="persist*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="false" /> <tx:method name="update*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="false" /> <tx:method name="modify*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="false" /> <tx:method name="delete*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="false" /> <tx:method name="remove*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="false" /> <tx:method name="get*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="true" /> <tx:method name="find*" isolation="REPEATABLE_READ" 
		propagation="REQUIRED" read-only="true" /> </tx:attributes> </tx:advice> -->

	<!-- 配置将通知织入目标对象 -->
	<!-- <aop:config> 配置切点 <aop:pointcut expression="execution(* cn.mwxu16.service.impl.*ServiceImpl.*(..))" 
		id="txPc"/> 配置切面 <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" /> 
		</aop:config> -->
		
		
		
		
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 将SessionFactory配置到Spring容器中 -->
	<!-- 注意：class属性的值，必须与当前使用的hibernate的版本对应，这里使用的是hibernate5 可以Ctrl+Shift+T, 
		搜索LocalSessionFactoryBean,然后选择对应的版本，再复制完整类名 -->
	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

		<!-- 引入c3p0连接池 -->
		<property name="dataSource" ref="dataSource"></property>

		<!-- 方案二 使用Properties配置相关信息 -->
		<!--配置hibernate基本信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 四个必选配置(注意：注入c3p0连接池之后，四个必选配置就不需要了) <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop> 
					<prop key="hibernate.connection.url">jdbc:mysql:///crm_32?characterEncoding=utf-8</prop> 
					<prop key="hibernate.connection.username">root</prop> <prop key="hibernate.connection.password">root</prop> -->
				<!-- 四个可选配置 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 引入ORM元数据 ,指定ORM元数据所在的路径，Spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:cn/mwxu16/domain"></property>
	</bean>



	<!-- 配置action -->
	<!-- 注意action对象的作用范围一定是多例的，默认的范围是单例，因此必须手动声明为多例 -->
	<bean name="userAction" class="cn.mwxu16.web.action.UserAction"
		scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<!-- 配置UserService -->
	<bean name="userService" class="cn.mwxu16.service.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>

	<!-- 配置UserDao -->
	<bean name="userDao" class="cn.mwxu16.dao.Impl.UserDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

</beans>